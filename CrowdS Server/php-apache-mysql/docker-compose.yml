version: "3.2"
services:
  php:
    build:
      context: "./php/"
      args:
       PHP_VERSION: "${PHP_VERSION:-7.4}"
    networks:
      - backend
    volumes:
      - "../PHP/www/html/:/var/www/html/"
    environment:
      DB_URL: "${DB_USERNAME:-mysql}"
      DB_USERNAME: "${DB_USERNAME:-root}"
      DB_PASSWORD: "${DB_PASSWORD:-root}"
      DB_NAME: "${DB_NAME:-cs}"
      FIREBASE_API_KEY: "${FIREBASE_API_KEY:-AAAAkLFHwHw:APA91bEDfdJrgv_HQ0iOxXqutFjXso1mO0H_w-C7FtaF8JGmLSF7hyBBxBVebPxfRjEuetIwVNQ3j7SK_VM2TPW9l90xM0rKhrtIQeQBP8QEMqbSdIzOiTW6k-l-z0QukeuUfiUuNANp}"
      PHP_URL: "${PHP_URL:-http://192.168.0.106:8000}"
    container_name: php
  apache:
    build:
      context: './apache/'
      args:
       APACHE_VERSION: "${APACHE_VERSION:-2.4.33}"
    depends_on:
      - php
      - mysql
    networks:
      - frontend
      - backend
    ports:
      - "8100:80"
    volumes:
      - "../PHP/www/html/:/var/www/html/"
    container_name: apache
  mysql:
    image: mysql:${MYSQL_VERSION:-latest}
    # restart: always
    ports:
      - "3308:3306"
    volumes:
      - "C:/_repositories/Masters/SQL cache:/var/lib/mysql"
      # set this where to save cached database
      - "../MySQL/docker-entrypoint-initdb:/docker-entrypoint-initdb.d/"
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD:-root}"
      MYSQL_DATABASE: "${DB_NAME:-cs}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    command: "--innodb_use_native_aio=0"
    container_name: mysql
networks:
  frontend:
  backend: